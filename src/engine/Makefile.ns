.PHONY: all clean 

ifeq ($(strip $(DEVKITPRO)),)
$(error "Please set DEVKITPRO in your environment. export DEVKITPRO=<path to>/devkitpro")
endif

TOPDIR ?= $(CURDIR)
 
include $(DEVKITPRO)/libnx/switch_rules

APP_TITLE = Doom64EX+
APP_DESCRIPTION := An improved modern version of Doom64EX.
APP_AUTHOR := Andr√© (Wolf3s) Guilherme, Adam "Gibbon(atsb)" Bilbough and Svkaiser
APP_VERSION := 3.6.6(Dev)
ICON := doom64ex-plus.png
WINDRES   = windres.exe
DEHACKED_OBJ = deh_ammo.o deh_doom.o deh_frame.o deh_io.o deh_main.o deh_mapping.o deh_misc.o deh_ptr.o deh_str.o deh_thing.o deh_weapon.o 
OBJ       = am_draw.o am_map.o con_console.o con_cvar.o d_devstat.o d_iwad.o d_main.o d_net.o $(DEHACKED_OBJ) dgl.o f_finale.o g_actions.o g_demo.o g_game.o g_settings.o gl_draw.o gl_main.o gl_shader.o gl_texture.o i_audio.o i_main.o i_png.o i_sdlinput.o i_system.o i_video.o i_w3swrapper.o in_stuff.o info.o m_cheat.o m_fixed.o m_keys.o m_menu.o m_misc.o m_password.o m_random.o m_shift.o md5.o net_client.o net_common.o net_dedicated.o net_io.o net_loop.o net_packet.o net_query.o net_server.o net_structure.o p_ceilng.o p_doors.o p_enemy.o p_floor.o p_inter.o p_lights.o p_macros.o p_map.o p_maputl.o p_mobj.o p_plats.o p_pspr.o p_saveg.o p_setup.o p_sight.o p_spec.o p_switch.o p_telept.o p_tick.o p_user.o psnprntf.o r_bsp.o r_clipper.o r_drawlist.o r_lights.o r_main.o r_scene.o r_sky.o r_things.o r_wipe.o s_sound.o sc_main.o sha1.o st_stuff.o tables.o w_file.o w_merge.o w_wad.o wi_stuff.o z_zone.o
LINKOBJ   = am_draw.o am_map.o con_console.o con_cvar.o d_devstat.o d_iwad.o d_main.o d_net.o $(DEHACKED_OBJ) dgl.o f_finale.o g_actions.o g_demo.o g_game.o g_settings.o gl_draw.o gl_main.o gl_shader.o gl_texture.o i_audio.o i_main.o i_png.o i_sdlinput.o i_system.o i_video.o i_w3swrapper.o in_stuff.o info.o m_cheat.o m_fixed.o m_keys.o m_menu.o m_misc.o m_password.o m_random.o m_shift.o md5.o net_client.o net_common.o net_dedicated.o net_io.o net_loop.o net_packet.o net_query.o net_server.o net_structure.o p_ceilng.o p_doors.o p_enemy.o p_floor.o p_inter.o p_lights.o p_macros.o p_map.o p_maputl.o p_mobj.o p_plats.o p_pspr.o p_saveg.o p_setup.o p_sight.o p_spec.o p_switch.o p_telept.o p_tick.o p_user.o psnprntf.o r_bsp.o r_clipper.o r_drawlist.o r_lights.o r_main.o r_scene.o r_sky.o r_things.o r_wipe.o s_sound.o sc_main.o sha1.o st_stuff.o tables.o w_file.o w_merge.o w_wad.o wi_stuff.o z_zone.o
LIBDIR    = -specs=$(DEVKITPRO)/libnx/switch.specs -L$(DEVKITPRO)/libnx/lib -L$(DEVKITPRO)/portlibs/switch/lib
LIBS      = $(LIBDIR) -lSDL2 -lSDL2main -lSDL2_mixer -lmpg123 -lmodplug -lvorbisidec -logg -lopusfile -lopus `sdl2-config --libs` -lm -lnx -lEGL -lstdc++ -lglad -lglapi -lfluidsynth -lpng16 -lbz2 -ljpeg -lz 
INCS      = -I$(DEVKITPRO)/portlibs/switch/include -I$(DEVKITPRO)/portlibs/switch/include/SDL2 -I$(DEVKITPRO)/libnx/include 
BIN       = Doom64EX+.elf
BUILD	  =	build
ARCH 	  = -march=armv8-a -mtune=cortex-a57 -mtp=soft -fPIE -fPIC -O3 -funsafe-math-optimizations -O2
DEFINES   = -DSWITCH -D__SWITCH__
CFLAGS    = $(INCS) $(DEFINES) $(ARCH) -Wall -W -g -Wpointer-arith -Wwrite-strings -Wcast-align -std=gnu99  
RM        = rm -f
LINK      = aarch64-none-elf-gcc
C		  = aarch64-none-elf-gcc
OUTPUT    = $(APP_TITLE)

ifeq ($(strip $(ICON)),)
	icons := $(wildcard *.png)
	ifneq (,$(findstring $(TARGET).jpg,$(icons)))
		export APP_ICON := $(TOPDIR)/$(TARGET).png
	else
		ifneq (,$(findstring icon.jpg,$(icons)))
			export APP_ICON := $(TOPDIR)/doom64ex-plus.png
		endif
	endif
else
	export APP_ICON := $(TOPDIR)/$(ICON)
endif

ifeq ($(strip $(NO_ICON)),)
	export NROFLAGS += --icon=$(APP_ICON)
endif

ifeq ($(strip $(NO_NACP)),)
	export NROFLAGS += --nacp=$(OUTPUT).nacp
endif

ifneq ($(APP_TITLEID),)
	export NACPFLAGS += --titleid=$(APP_TITLEID)
endif

ifneq ($(ROMFS),)
	export NROFLAGS += --romfsdir=$(ROMFS)
endif

all: $(BIN) 

$(BIN): $(OBJ)
	$(LINK) $(LINKOBJ) -o "Doom64EX+.elf" $(LIBS)

## THE PAIN STARTS HERE:

am_draw.o: $(GLOBALDEPS) am_draw.h
	$(C) -c am_draw.c -o am_draw.o $(CFLAGS)

am_map.o: $(GLOBALDEPS) am_map.h
	$(C) -c am_map.c -o am_map.o $(CFLAGS)

con_console.o: $(GLOBALDEPS) con_console.h
	$(C) -c con_console.c -o con_console.o $(CFLAGS)

con_cvar.o: $(GLOBALDEPS) con_cvar.h
	$(C) -c con_cvar.c -o con_cvar.o $(CFLAGS)

d_devstat.o: $(GLOBALDEPS) d_devstat.h
	$(C) -c d_devstat.c -o d_devstat.o $(CFLAGS)

d_main.o: $(GLOBALDEPS) d_main.h
	$(C) -c d_main.c -o d_main.o $(CFLAGS)

d_net.o: $(GLOBALDEPS) d_net.h
	$(C) -c d_net.c -o d_net.o $(CFLAGS)
	
deh_ammo.o: $(GLOBALDEPS) deh_defs.h
	$(C) -c deh_ammo.c -o deh_ammo.o $(CFLAGS)	

deh_doom.o: $(GLOBALDEPS) deh_defs.h
	$(C) -c deh_doom.c -o deh_doom.o $(CFLAGS)	

deh_frame.o: $(GLOBALDEPS) deh_defs.h
	$(C) -c deh_frame.c -o deh_frame.o $(CFLAGS)	

deh_io.o: $(GLOBALDEPS) deh_io.h deh_defs.h
	$(C) -c deh_io.c -o deh_io.o $(CFLAGS)	

deh_main.o: $(GLOBALDEPS) deh_main.h deh_defs.h
	$(C) -c deh_main.c -o deh_main.o $(CFLAGS)	

deh_mapping.o: $(GLOBALDEPS) deh_mapping.h deh_defs.h
	$(C) -c deh_mapping.c -o deh_mapping.o $(CFLAGS)	

deh_misc.o: $(GLOBALDEPS) deh_misc.h deh_defs.h
	$(C) -c deh_misc.c -o deh_misc.o $(CFLAGS)	

deh_ptr.o: $(GLOBALDEPS) deh_defs.h
	$(C) -c deh_ptr.c -o deh_ptr.o $(CFLAGS)	
	
deh_str.o: $(GLOBALDEPS) deh_str.h deh_defs.h
	$(C) -c deh_str.c -o deh_str.o $(CFLAGS)		

deh_thing.o: $(GLOBALDEPS) deh_defs.h
	$(C) -c deh_thing.c -o deh_thing.o $(CFLAGS)

deh_weapon.o: $(GLOBALDEPS) deh_defs.h
	$(C) -c deh_weapon.c -o deh_weapon.o $(CFLAGS)

dgl.o: $(GLOBALDEPS) dgl.h
	$(C) -c dgl.c -o dgl.o $(CFLAGS)

f_finale.o: $(GLOBALDEPS) f_finale.h
	$(C) -c f_finale.c -o f_finale.o $(CFLAGS)

g_actions.o: $(GLOBALDEPS) g_actions.h
	$(C) -c g_actions.c -o g_actions.o $(CFLAGS)

g_demo.o: $(GLOBALDEPS) g_demo.h
	$(C) -c g_demo.c -o g_demo.o $(CFLAGS)

g_game.o: $(GLOBALDEPS) g_game.h
	$(C) -c g_game.c -o g_game.o $(CFLAGS)

g_settings.o: $(GLOBALDEPS) g_settings.h
	$(C) -c g_settings.c -o g_settings.o $(CFLAGS)
	
gl_draw.o: $(GLOBALDEPS) gl_draw.h
	$(C) -c gl_draw.c -o gl_draw.o $(CFLAGS)	

gl_main.o: $(GLOBALDEPS) gl_main.h
	$(C) -c gl_main.c -o gl_main.o $(CFLAGS)	
	
gl_shader.o: $(GLOBALDEPS) gl_shader.h
	$(C) -c gl_shader.c -o gl_shader.o $(CFLAGS)	

gl_texture.o: $(GLOBALDEPS) gl_texture.h
	$(C) -c gl_texture.c -o gl_texture.o $(CFLAGS)

i_audio.o: $(GLOBALDEPS) i_audio.h
	$(C) -c i_audio.c -o i_audio.o $(CFLAGS)

i_main.o: $(GLOBALDEPS)
	$(C) -c i_main.c -o i_main.o $(CFLAGS)
	
i_png.o: $(GLOBALDEPS) i_png.h
	$(C) -c i_png.c -o i_png.o $(CFLAGS)	

i_sdlinput.o: $(GLOBALDEPS) i_sdlinput.h
	$(C) -c i_sdlinput.c -o i_sdlinput.o $(CFLAGS)	

i_system.o: $(GLOBALDEPS) i_system.h
	$(C) -c i_system.c -o i_system.o $(CFLAGS)	

i_video.o: $(GLOBALDEPS) i_video.h
	$(C) -c i_video.c -o i_video.o $(CFLAGS)	

i_w3swrapper.o: $(GLOBALDEPS) i_w3swrapper.h
	$(C) -c i_w3swrapper.c -o i_w3swrapper.o $(CFLAGS)	

in_stuff.o: $(GLOBALDEPS) 
	$(C) -c in_stuff.c -o in_stuff.o $(CFLAGS)	

info.o: $(GLOBALDEPS) info.h
	$(C) -c info.c -o info.o $(CFLAGS)	

m_cheat.o: $(GLOBALDEPS) m_cheat.h
	$(C) -c m_cheat.c -o m_cheat.o $(CFLAGS)	

m_fixed.o: $(GLOBALDEPS)
	$(C) -c m_fixed.c -o m_fixed.o $(CFLAGS)	

m_keys.o: $(GLOBALDEPS) m_keys.h
	$(C) -c m_keys.c -o m_keys.o $(CFLAGS)
	
m_menu.o: $(GLOBALDEPS) m_menu.h
	$(C) -c m_menu.c -o m_menu.o $(CFLAGS)

m_misc.o: $(GLOBALDEPS) m_misc.h
	$(C) -c m_misc.c -o m_misc.o $(CFLAGS)
	
m_password.o: $(GLOBALDEPS) m_password.h
	$(C) -c m_password.c -o m_password.o $(CFLAGS)

m_random.o: $(GLOBALDEPS) m_random.h
	$(C) -c m_random.c -o m_random.o $(CFLAGS)

m_shift.o: $(GLOBALDEPS) m_shift.h
	$(C) -c m_shift.c -o m_shift.o $(CFLAGS)

net_client.o: $(GLOBALDEPS) net_client.h
	$(C) -c net_client.c -o net_client.o $(CFLAGS)
	
net_common.o: $(GLOBALDEPS) net_common.h
	$(C) -c net_common.c -o net_common.o $(CFLAGS)

net_dedicated.o: $(GLOBALDEPS) net_dedicated.h
	$(C) -c net_dedicated.c -o net_dedicated.o $(CFLAGS)

net_io.o: $(GLOBALDEPS) net_io.h
	$(C) -c net_io.c -o net_io.o $(CFLAGS)

net_loop.o: $(GLOBALDEPS) net_loop.h
	$(C) -c net_loop.c -o net_loop.o $(CFLAGS)

net_packet.o: $(GLOBALDEPS) net_packet.h
	$(C) -c net_packet.c -o net_packet.o $(CFLAGS)

net_query.o: $(GLOBALDEPS) net_query.h
	$(C) -c net_query.c -o net_query.o $(CFLAGS)

net_server.o: $(GLOBALDEPS) net_server.h
	$(C) -c net_server.c -o net_server.o $(CFLAGS)

net_structure.o: $(GLOBALDEPS) net_structure.h
	$(C) -c net_structure.c -o net_structure.o $(CFLAGS)

p_ceilng.o: $(GLOBALDEPS) doomdef.h
	$(C) -c p_ceilng.c -o p_ceilng.o $(CFLAGS)

p_doors.o: $(GLOBALDEPS) doomdef.h
	$(C) -c p_doors.c -o p_doors.o $(CFLAGS)

p_enemy.o: $(GLOBALDEPS) doomdef.h
	$(C) -c p_enemy.c -o p_enemy.o $(CFLAGS)

p_floor.o: $(GLOBALDEPS) doomdef.h
	$(C) -c p_floor.c -o p_floor.o $(CFLAGS)

p_inter.o: $(GLOBALDEPS) p_inter.h
	$(C) -c p_inter.c -o p_inter.o $(CFLAGS)
	
p_lights.o: $(GLOBALDEPS) doomdef.h
	$(C) -c p_lights.c -o p_lights.o $(CFLAGS)	
	
p_macros.o: $(GLOBALDEPS) p_macros.h
	$(C) -c p_macros.c -o p_macros.o $(CFLAGS)	
	
p_map.o: $(GLOBALDEPS) doomdef.h
	$(C) -c p_map.c -o p_map.o $(CFLAGS)	

p_maputl.o: $(GLOBALDEPS) doomdef.h
	$(C) -c p_maputl.c -o p_maputl.o $(CFLAGS)

p_mobj.o: $(GLOBALDEPS) p_mobj.h
	$(C) -c p_mobj.c -o p_mobj.o $(CFLAGS)

p_plats.o: $(GLOBALDEPS) doomdef.h
	$(C) -c p_plats.c -o p_plats.o $(CFLAGS)	

p_pspr.o: $(GLOBALDEPS) p_pspr.h
	$(C) -c p_pspr.c -o p_pspr.o $(CFLAGS)	

p_saveg.o: $(GLOBALDEPS) p_saveg.h
	$(C) -c p_saveg.c -o p_saveg.o $(CFLAGS)

p_setup.o: $(GLOBALDEPS) p_setup.h
	$(C) -c p_setup.c -o p_setup.o $(CFLAGS)

p_sight.o: $(GLOBALDEPS) doomdef.h
	$(C) -c p_sight.c -o p_sight.o $(CFLAGS)	

p_spec.o: $(GLOBALDEPS) p_spec.h
	$(C) -c p_spec.c -o p_spec.o $(CFLAGS)
	
p_switch.o: $(GLOBALDEPS) doomdef.h
	$(C) -c p_switch.c -o p_switch.o $(CFLAGS)
	
p_telept.o: $(GLOBALDEPS) doomdef.h
	$(C) -c p_telept.c -o p_telept.o $(CFLAGS)	

p_tick.o: $(GLOBALDEPS) p_tick.h doomdef.h
	$(C) -c p_tick.c -o p_tick.o $(CFLAGS)
	
p_user.o: $(GLOBALDEPS) doomdef.h
	$(C) -c p_user.c -o p_user.o $(CFLAGS)	

r_bsp.o: $(GLOBALDEPS) doomdef.h
	$(C) -c r_bsp.c -o r_bsp.o $(CFLAGS)

r_clipper.o: $(GLOBALDEPS) r_clipper.h doomdef.h
	$(C) -c r_clipper.c -o r_clipper.o $(CFLAGS)

r_drawlist.o: $(GLOBALDEPS) r_drawlist.h
	$(C) -c r_drawlist.c -o r_drawlist.o $(CFLAGS)

r_lights.o: $(GLOBALDEPS) r_lights.h
	$(C) -c r_lights.c -o r_lights.o $(CFLAGS)

r_main.o: $(GLOBALDEPS) r_main.h
	$(C) -c r_main.c -o r_main.o $(CFLAGS)

r_scene.o: $(GLOBALDEPS)
	$(C) -c r_scene.c -o r_scene.o $(CFLAGS)

r_sky.o: $(GLOBALDEPS) r_sky.h
	$(C) -c r_sky.c -o r_sky.o $(CFLAGS)

r_things.o: $(GLOBALDEPS) r_things.h
	$(C) -c r_things.c -o r_things.o $(CFLAGS)
	
r_wipe.o: $(GLOBALDEPS) r_wipe.h
	$(C) -c r_wipe.c -o r_wipe.o $(CFLAGS)	
	
s_sound.o: $(GLOBALDEPS) s_sound.h
	$(C) -c s_sound.c -o s_sound.o $(CFLAGS)	

sc_main.o: $(GLOBALDEPS) sc_main.h
	$(C) -c sc_main.c -o sc_main.o $(CFLAGS)	
	
sha1.o: $(GLOBALDEPS) sha1.h
	$(C) -c sha1.c -o sha1.o $(CFLAGS)		

st_stuff.o: $(GLOBALDEPS) st_stuff.h
	$(C) -c st_stuff.c -o st_stuff.o $(CFLAGS)

tables.o: $(GLOBALDEPS) tables.h
	$(C) -c tables.c -o tables.o $(CFLAGS)	

w_file.o: $(GLOBALDEPS) w_file.h 
	$(C) -c w_file.c -o w_file.o $(CFLAGS)

w_merge.o: $(GLOBALDEPS) w_merge.h  
	$(C) -c w_merge.c -o w_merge.o $(CFLAGS)
	
w_wad.o: $(GLOBALDEPS) w_wad.h 
	$(C) -c w_wad.c -o w_wad.o $(CFLAGS)

wi_stuff.o: $(GLOBALDEPS) wi_stuff.h 
	$(C) -c wi_stuff.c -o wi_stuff.o $(CFLAGS)

z_zone.o: $(GLOBALDEPS) z_zone.h 
	$(C) -c z_zone.c -o z_zone.o $(CFLAGS)	
	
#---------------------------------------------------------------------------------
# main targets
#---------------------------------------------------------------------------------
all	:	$(OUTPUT).pfs0 $(OUTPUT).nro

$(OUTPUT).pfs0	:	$(OUTPUT).nso

$(OUTPUT).nso	:	$(OUTPUT).elf

ifeq ($(strip $(NO_NACP)),)
$(OUTPUT).nro	:	$(OUTPUT).elf $(OUTPUT).nacp
else
$(OUTPUT).nro	:	$(OUTPUT).elf
endif

$(OUTPUT).elf	:	$(OFILES)

$(OFILES_SRC)	: $(HFILES_BIN)

clean: 
	$(RM) $(OBJ) $(BIN)

# end of Makefile ...
